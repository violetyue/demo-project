[{"E:\\react\\demo-project\\src\\index.js":"1","E:\\react\\demo-project\\src\\reportWebVitals.js":"2","E:\\react\\demo-project\\src\\App.js":"3","E:\\react\\demo-project\\src\\routes\\index.js":"4","E:\\react\\demo-project\\src\\views\\login\\index.js":"5","E:\\react\\demo-project\\src\\layout\\layout.js":"6","E:\\react\\demo-project\\src\\views\\admin\\wuliao.js":"7","E:\\react\\demo-project\\src\\views\\admin\\gongxu.js":"8","E:\\react\\demo-project\\src\\views\\admin\\gongdan.js":"9","E:\\react\\demo-project\\src\\views\\admin\\danwei.js":"10","E:\\react\\demo-project\\src\\views\\admin\\cipin.js":"11","E:\\react\\demo-project\\src\\views\\admin\\yonghu.js":"12","E:\\react\\demo-project\\src\\views\\admin\\wuliaocreate.js":"13","E:\\react\\demo-project\\src\\views\\admin\\gongxucreate.js":"14","E:\\react\\demo-project\\src\\api\\index.js":"15"},{"size":622,"mtime":1607928990055,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":735,"mtime":1608708461316,"results":"19","hashOfConfig":"17"},{"size":1587,"mtime":1608774689524,"results":"20","hashOfConfig":"17"},{"size":9085,"mtime":1608367274062,"results":"21","hashOfConfig":"17"},{"size":3281,"mtime":1608774763181,"results":"22","hashOfConfig":"17"},{"size":7541,"mtime":1608800908633,"results":"23","hashOfConfig":"17"},{"size":7053,"mtime":1608797526233,"results":"24","hashOfConfig":"17"},{"size":5104,"mtime":1608802702626,"results":"25","hashOfConfig":"17"},{"size":7499,"mtime":1608553490002,"results":"26","hashOfConfig":"17"},{"size":7665,"mtime":1608548836428,"results":"27","hashOfConfig":"17"},{"size":11455,"mtime":1608796922556,"results":"28","hashOfConfig":"17"},{"size":6906,"mtime":1608802052842,"results":"29","hashOfConfig":"17"},{"size":8015,"mtime":1608798228232,"results":"30","hashOfConfig":"17"},{"size":6439,"mtime":1608795331658,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"380x10",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\react\\demo-project\\src\\index.js",[],["66","67"],"E:\\react\\demo-project\\src\\reportWebVitals.js",[],"E:\\react\\demo-project\\src\\App.js",[],"E:\\react\\demo-project\\src\\routes\\index.js",[],"E:\\react\\demo-project\\src\\views\\login\\index.js",["68","69"],"import React, { Component } from 'react';\r\nimport './login.css'\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport FormItem from 'antd/lib/form/FormItem';\r\nimport 'antd/dist/antd.css';\r\nimport { UserOutlined, LockOutlined, HomeOutlined } from '@ant-design/icons';\r\nimport { getUserInfo, login } from '../../api/index'\r\nimport JsSha from 'jssha';\r\n\r\nexport const hashPassword = (password) => {\r\n    const sha = new JsSha('SHA3-224', 'TEXT');\r\n    sha.update(password);\r\n    return sha.getHash('HEX');\r\n};\r\n\r\nclass Login extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            type: 0,\r\n            userTelephone: '',\r\n            userPassword: '',\r\n            userCode: '',\r\n            userAccount: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.getItem('auth')) {\r\n            this.props.history.push('/admin/homepage')\r\n        }\r\n    }\r\n\r\n    usertelephoneCheck(e) {\r\n        this.setState({\r\n            userTelephone: e.target.value, \r\n        })\r\n    }\r\n    userpasswordCheck(e) {\r\n        this.setState({\r\n            userPassword: e.target.value,\r\n        })\r\n    }\r\n    usercodeCheck(e) {\r\n        this.setState({\r\n            userCode: e.target.value,\r\n        })\r\n    }\r\n    useraccountCheck(e) {\r\n        this.setState({\r\n            userAccount: e.target.value,\r\n        })\r\n    }\r\n\r\n    handleSubmit=e=>{\r\n        this.formRef.current.validateFields()\r\n                .then(values => {\r\n                    this.formRef.current.resetFields();\r\n                    this.goToLink(this);\r\n                })\r\n                .catch(info=>{\r\n                  console.log('Validate failed:', info);\r\n                })\r\n    }\r\n\r\n    goToLink() {\r\n        const data={}\r\n        data.type=this.state.type\r\n        data.code=this.state.userCode\r\n        data.username=this.state.userAccount\r\n        data.phone=this.state.userTelephone\r\n        data.password=hashPassword(this.state.userPassword)\r\n        login(data).then(res=>{\r\n            const { data } = res\r\n            localStorage.setItem(\"auth\", data)\r\n            getUserInfo().then(res=>{\r\n                const { data } = res\r\n                localStorage.setItem(\"userInfo\", data)\r\n                console.log(res)\r\n            })\r\n            console.log(data)\r\n            this.props.history.push('/admin/homepage')\r\n        })\r\n        \r\n    }\r\n\r\n    formRef = React.createRef();\r\n\r\n    loginType() {\r\n        if (this.state.type === 0)\r\n        {\r\n            return this.telephoneLogin()\r\n        }\r\n        if (this.state.type === 1)\r\n        {\r\n            return this.accountLogin()\r\n        }\r\n        \r\n    }\r\n\r\n    telephoneLogin=()=> {\r\n        return (\r\n            <Form ref={this.formRef}\r\n                      name='normal_login'\r\n                      className='login-area-telephone'\r\n                      initialValues={{\r\n                          remember: true,\r\n                      }}\r\n                    >\r\n                        <FormItem\r\n                            name='telephone'\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请输入手机号',\r\n                                },\r\n                            ]}\r\n                        >\r\n                        <Input \r\n                          prefix={<UserOutlined className='site-form-item-icon' />} \r\n                          placeholder='手机号'\r\n                          value={this.state.userTelephone}\r\n                          onChange={this.usertelephoneCheck.bind(this)}\r\n                          />\r\n                        </FormItem>\r\n                        <FormItem\r\n                            name='password'\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请输入密码',\r\n                                },\r\n                            ]}\r\n                        >\r\n                        <Input \r\n                          prefix={<LockOutlined className='site-form-item-icon' />} \r\n                          type='password' \r\n                          placeholder='密码'\r\n                          value={this.state.userPassword}\r\n                          onChange={this.userpasswordCheck.bind(this)}\r\n                          />\r\n                        </FormItem>\r\n                        <FormItem>\r\n                        <Button type='primary' onClick={this.handleSubmit} className='login-button'>登录</Button>\r\n                        </FormItem>\r\n                        <FormItem name='remember' valuePropName='checked' noStyle>\r\n                            <Checkbox>保持登录</Checkbox>\r\n                        </FormItem>\r\n                    </Form>\r\n        )\r\n    }\r\n\r\n    accountLogin=()=> {\r\n        return(\r\n            <Form ref={this.formRef}\r\n                      name='normal_login'\r\n                      className='login-area-account'\r\n                      initialValues={{\r\n                          remember: true,\r\n                      }}\r\n                    >\r\n                        <FormItem\r\n                            name='code'\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请输入工厂代码',\r\n                                },\r\n                            ]}\r\n                        >\r\n                        <Input \r\n                          prefix={<HomeOutlined className='site-form-item-icon' />} \r\n                          placeholder='工厂代码'\r\n                          value={this.state.userCode}\r\n                          onChange={this.usercodeCheck.bind(this)}\r\n                          />\r\n                        </FormItem>\r\n                        <FormItem\r\n                            name='account'\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请输入账号',\r\n                                },\r\n                            ]}\r\n                        >\r\n                        <Input \r\n                          prefix={<UserOutlined className='site-form-item-icon' />} \r\n                          placeholder='账号'\r\n                          value={this.state.userAccount}\r\n                          onChange={this.useraccountCheck.bind(this)}\r\n                          />\r\n                        </FormItem>\r\n                        <FormItem\r\n                            name='password'\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请输入密码',\r\n                                },\r\n                            ]}\r\n                        >\r\n                        <Input \r\n                          prefix={<LockOutlined className='site-form-item-icon' />} \r\n                          type='password' \r\n                          placeholder='密码'\r\n                          value={this.state.userPassword}\r\n                          onChange={this.userpasswordCheck.bind(this)}\r\n                          />\r\n                        </FormItem>\r\n                        <FormItem>\r\n                        <Button type='primary' onClick={this.handleSubmit} className='login-button'>登录</Button>\r\n                        </FormItem>\r\n                        <FormItem name='remember' valuePropName='checked' noStyle>\r\n                            <Checkbox>保持登录</Checkbox>\r\n                        </FormItem>\r\n                    </Form>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='loginarea'>\r\n                <div className='loginlogo' />\r\n                <div className='login-form'>\r\n                    <div className='login-header'>\r\n                        <div className='login-title'>\r\n                            登录小工单\r\n                        </div>\r\n                    </div>\r\n                    <div className='login-content'>\r\n                        <div className='login-type'>\r\n                            <a \r\n                              onClick={()=>{this.setState({type: 0})}} \r\n                              style={this.state.type === 0 ? {color:'blue'}:{}}>\r\n                              手机号登录</a>\r\n                            <a \r\n                              onClick={()=>{this.setState({type: 1})}}\r\n                              style={this.state.type === 1 ? {color:'blue'}:{}}>\r\n                              工厂账号登录</a>\r\n                        </div>\r\n                        {this.loginType()}\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","E:\\react\\demo-project\\src\\layout\\layout.js",["70","71"],"E:\\react\\demo-project\\src\\views\\admin\\wuliao.js",["72","73","74","75","76","77","78"],"E:\\react\\demo-project\\src\\views\\admin\\gongxu.js",["79","80","81","82","83","84","85","86","87"],"E:\\react\\demo-project\\src\\views\\admin\\gongdan.js",["88","89","90","91","92","93","94"],"E:\\react\\demo-project\\src\\views\\admin\\danwei.js",["95","96","97"],"import React, { Component } from 'react';\r\nimport { Input, Button, Table, Modal, Space } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport {\r\n    SearchOutlined,\r\n    PlusCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport '../style/style.css'\r\nimport { insertUnit, deleteUnit, getUnitList, compileUnit } from '../../api/index'\r\n\r\nconst { TextArea } = Input\r\n\r\nclass danwei extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            columns: [{\r\n                title: '序号',\r\n                dataIndex: 'sqno',\r\n                key: 'id',\r\n                render: (txt,record,index)=>index + 1\r\n\r\n            }, {\r\n                title: '名称',\r\n                dataIndex: 'name',\r\n            }, {\r\n                title: '备注',\r\n                dataIndex: 'remark'\r\n            }, {\r\n                title: '操作',\r\n                dataIndex: 'delete',\r\n                key: 'delete',\r\n                render: (text,record,index) => \r\n                (\r\n                  <Space key={index}>\r\n                    <a \r\n                      data-index={index}\r\n                      onClick={()=>{this.setState({editInfo:record,modalAddInfoVisible:true})}}\r\n                      >编辑</a> \r\n                     \r\n                    <a data-index={index} \r\n                       onClick={()=>{this.handleDelete(record)}}\r\n                    >删除</a>\r\n                  </Space>\r\n                )\r\n            }],\r\n            data: [],\r\n            modalAddInfoVisible: false,\r\n            editInfo: {\r\n              name: '',\r\n              remark: '',\r\n            },\r\n            searchInfo: {\r\n              searchName: '',\r\n              searchRemark: '',\r\n            },\r\n            page: {\r\n              size: 10,\r\n              page: 1,\r\n            },\r\n            total: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.setData()\r\n    }\r\n\r\n    handleOk = e => {\r\n      const { editInfo } = this.state\r\n      if (!editInfo.name) {\r\n        alert(\"名称不能为空\")\r\n        return\r\n      }\r\n      this.updateUnit(editInfo)\r\n    }\r\n\r\n    setData = (newPages={}) => {\r\n        const {page,size} = newPages\r\n        const {searchInfo} = this.state\r\n        const param = {\r\n            ...searchInfo,\r\n            page: {\r\n                page: page || this.state.page.page,\r\n                size: size || this.state.page.size\r\n            }   \r\n        }\r\n        getUnitList(param). then(res=>\r\n          {\r\n              const { data, page, size, count } = res\r\n              this.setState({data, page:{page, size}, total: count}, ()=>\r\n              {\r\n                console.log(this.state.page)\r\n              })\r\n          })\r\n    }\r\n\r\n    onTableChange = (pagination, filters, sorter, extra) => {\r\n        this.setData({\r\n            page: pagination.current,\r\n            pageSize: pagination.pageSize\r\n        })\r\n        console.log(pagination, filters, sorter, extra)\r\n    }\r\n\r\n    onQuery = () => {\r\n        this.setData({page: 1, size: 10})\r\n    }\r\n\r\n    clearAction() {\r\n        this.setState({\r\n            editInfo: {\r\n                name: '',\r\n                remark: '',\r\n            },\r\n            modalAddInfoVisible: false,\r\n        })\r\n    }\r\n\r\n    updateUnit(unit) {\r\n        if (unit.id) {\r\n            compileUnit(unit).then(res=>{\r\n                this.clearAction()\r\n                this.setData()\r\n            })\r\n        } else{\r\n            insertUnit(unit).then(res=>{\r\n                this.clearAction()\r\n                this.setData()\r\n            })\r\n        }\r\n    }\r\n\r\n    handleDelete = (record) => {\r\n        const id = record.id\r\n        deleteUnit(id).then(res=>{\r\n            this.clearAction()\r\n            this.setData()\r\n        })\r\n    }\r\n\r\n    nameInput(e) {\r\n        const { editInfo } = this.state\r\n        this.setState({\r\n            editInfo: {...editInfo, name: e.target.value},\r\n        })\r\n    }\r\n    remarkInput(e) {\r\n        const { editInfo } = this.state\r\n        this.setState({\r\n            editInfo:{...editInfo, remark: e.target.value},\r\n        })\r\n    }\r\n    searchnameInput(e) {\r\n        const { searchInfo } = this.state\r\n        this.setState({\r\n              searchInfo: {...searchInfo, searchName: e.target.value}\r\n        })\r\n    }\r\n    searchremarkInput(e) {\r\n        const { searchInfo } = this.state\r\n        this.setState({\r\n              searchInfo: {...searchInfo, searchRemark: e.target.value}\r\n        })\r\n    }\r\n\r\n    render() { \r\n        const { data, columns, editInfo, searchInfo, modalAddInfoVisible, page, total } = this.state\r\n        const _pagination = { current: page.page, size: page.size, total}\r\n        console.log(page, _pagination)\r\n\r\n        return (\r\n            <div>\r\n                <div className='searchdanwei'>\r\n                    <div className='searchname'>\r\n                        <label htmlFor='name'>名称 </label>\r\n                        <Input \r\n                          value={searchInfo.searchName} \r\n                          placeholder=\"请输入名称\" \r\n                          style={{ width: '85%' }}\r\n                          onChange={this.searchnameInput.bind(this)} />\r\n                    </div>\r\n                    <div className='searchcode'>\r\n                        <label htmlFor='name'>备注 </label>\r\n                        <Input \r\n                          value={searchInfo.searchRemark} \r\n                          placeholder=\"请输入编号\" \r\n                          style={{ width: '85%' }}\r\n                          onChange={this.searchremarkInput.bind(this)} />\r\n                    </div>\r\n                    <Button \r\n                      type='primary' \r\n                      icon={<SearchOutlined />}\r\n                      onClick={this.onQuery} >查询</Button>\r\n                </div>\r\n                <div className='createdanwei'>\r\n                    <Button \r\n                      type='primary' \r\n                      icon={<PlusCircleOutlined />} \r\n                      onClick={()=>this.setState({modalAddInfoVisible: true})}\r\n                    >创建单位</Button>\r\n                    <Modal \r\n                      visible={modalAddInfoVisible} \r\n                      title={editInfo.id? \"编辑单位\":\"创建单位\"} \r\n                      cancelText=\"取消\" \r\n                      onCancel={()=>{this.clearAction()}}\r\n                      okText=\"确定\" \r\n                      onOk={this.handleOk}\r\n                    >\r\n                        <label htmlFor='name'>名称 </label>\r\n                        <Input \r\n                            placeholder=\"请输入\"\r\n                            value={editInfo.name}\r\n                            onChange={this.nameInput.bind(this)}\r\n                        />\r\n                        <label htmlFor='name'>备注 </label>\r\n                        <TextArea \r\n                            row={4}\r\n                            value={editInfo.remark}\r\n                            onChange={this.remarkInput.bind(this)}  \r\n                        />    \r\n                    </Modal>\r\n                </div>\r\n                <div className='danweitable'>\r\n                    <Table \r\n                      columns={columns} \r\n                      dataSource={data} \r\n                      pagination={_pagination} \r\n                      onChange={this.onTableChange}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default danwei;","E:\\react\\demo-project\\src\\views\\admin\\cipin.js",["98","99"],"import React, { Component } from 'react';\r\nimport { Input, Button, Table, Modal, Space } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport {\r\n    SearchOutlined,\r\n    PlusCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport '../style/style.css'\r\nimport { getinferiorQuality, insertinferiorQuality, compileferiorQuality, deleteinferiorQuality } from '../../api/index'\r\n\r\nclass cipin extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            columns: [{\r\n                title: '序号',\r\n                dataIndex: 'sqno',\r\n                key: 'id',\r\n                render: (txt,record,index)=>index + 1\r\n            }, {\r\n                title: '次品项编号',\r\n                dataIndex: 'code',\r\n                key: 'code',\r\n            }, {\r\n                title: '次品项名称',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n            }, {\r\n                title: '操作',\r\n                dataIndex: 'delete',\r\n                key: 'delete',\r\n                render: (text,record,index) => \r\n                (\r\n                  <Space key={index}>\r\n                    <a \r\n                      data-index={index}\r\n                      onClick={()=>{this.setState({editInfo:record,modalAddInfoVisible:true})}}\r\n                    >编辑</a>  \r\n                    <a \r\n                      data-index={index} \r\n                      onClick={()=>{this.handleDelete(record)}}\r\n                    >删除</a>\r\n                  </Space>\r\n                )\r\n            }],\r\n            data: [],\r\n            modalAddInfoVisible: false,\r\n            editInfo: {\r\n                code: '',\r\n                name: '',\r\n            },\r\n            searchInfo: {\r\n                searchCode: '',\r\n                searchName: '',\r\n            },\r\n            page: {\r\n                size: 10,\r\n                page: 1\r\n            },\r\n            total: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setData()\r\n    }\r\n\r\n    clearAction() {\r\n        this.setState({\r\n            editInfo: {\r\n                code: '',\r\n                name: '',\r\n            },\r\n            modalAddInfoVisible: false,\r\n        })\r\n    }\r\n\r\n    handleOk = e => {\r\n        const { editInfo } = this.state\r\n        if (!editInfo.code) {\r\n            alert('编号不能为空')\r\n            return\r\n        }\r\n        if (!editInfo.name) {\r\n            alert('名称不能为空')\r\n            return\r\n        }\r\n        this.updateQuality(editInfo)\r\n    }\r\n\r\n    setData = (newPages={}) => {\r\n        const {page,size} = newPages\r\n        const {searchInfo} = this.state\r\n        const param = {\r\n            ...searchInfo,\r\n            page: {\r\n                page: page || this.state.page.page,\r\n                size: size || this.state.page.size\r\n            }\r\n        }\r\n        getinferiorQuality(param).then(res=>\r\n            {\r\n                const { data, page, size, count } = res\r\n                this.setState({data, page:{page, size}, total: count})\r\n            })\r\n    }\r\n    \r\n    onTableChange = (pagination, filters, sorter, extra) => {\r\n        this.setData({\r\n            page: pagination.current,\r\n            pageSize: pagination.pageSize\r\n        })\r\n        console.log(pagination, filters, sorter, extra)\r\n    }\r\n\r\n    onQuery = () => {\r\n        this.setData({page:1, size:10})\r\n    }\r\n\r\n    updateQuality(quality) {\r\n        if (quality.id) {\r\n            compileferiorQuality(quality).then(res=>{\r\n                this.clearAction()\r\n                this.setData()\r\n            }) \r\n        } else {\r\n            insertinferiorQuality(quality).then(res=>{\r\n                this.clearAction()\r\n                this.setData()\r\n            })\r\n        }\r\n    }\r\n    \r\n    handleDelete = (record) => {\r\n        const id = record.id\r\n        deleteinferiorQuality(id).then(()=>{\r\n            this.clearAction()\r\n            this.setData()\r\n        })\r\n    }\r\n\r\n    codeInput(e) {\r\n        const { editInfo } = this.state\r\n        this.setState({\r\n            editInfo: {...editInfo, code: e.target.value}\r\n        })\r\n    }\r\n    nameInput(e) {\r\n        const { editInfo } = this.state\r\n        this.setState({\r\n            editInfo: {...editInfo, name: e.target.value}\r\n        })\r\n    }\r\n    searchcodeInput(e) {\r\n        const { searchInfo } = this.state\r\n        this.setState({\r\n            searchInfo: {...searchInfo, searchCode: e.target.value}\r\n        })\r\n    }\r\n    searchnameInput(e) {\r\n        const { searchInfo } = this.state\r\n        this.setState({\r\n            searchInfo: {...searchInfo, searchName: e.target.value}\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { data, columns, editInfo, searchInfo, modalAddInfoVisible, page, total } = this.state\r\n        const _pagination = {current: page.page, size: page.size, total}\r\n        console.log(page, _pagination)\r\n\r\n        return (\r\n            <div>\r\n                <div className='searchcipin'>\r\n                    <div className='searchname'>\r\n                        <label htmlFor='name'>名称 </label>\r\n                        <Input \r\n                          value={searchInfo.searchName} \r\n                          placeholder=\"请输入名称\" \r\n                          style={{ width: '85%' }}\r\n                          onChange={this.searchnameInput.bind(this)} />\r\n                    </div>\r\n                    <div className='searchcode'>\r\n                        <label htmlFor='name'>备注 </label>\r\n                        <Input \r\n                          value={searchInfo.searchCode} \r\n                          placeholder=\"请输入编号\" \r\n                          style={{ width: '85%' }}\r\n                          onChange={this.searchcodeInput.bind(this)} />\r\n                    </div>\r\n                    <Button \r\n                      type='primary' \r\n                      icon={<SearchOutlined />}\r\n                      onClick={this.onQuery}>查询</Button>\r\n                </div>\r\n                <div className='createcipin'>\r\n                    <Button \r\n                      type='primary' \r\n                      icon={<PlusCircleOutlined />} \r\n                      onClick={()=>this.setState({modalAddInfoVisible: true})}\r\n                    >创建次品项</Button>\r\n                    <Modal \r\n                      visible={modalAddInfoVisible} \r\n                      title={editInfo.id? \"编辑次品项\":\"创建次品项\"}\r\n                      cancelText=\"取消\" \r\n                      onCancel={()=>{this.clearAction()}}\r\n                      okText=\"确定\" \r\n                      onOk={this.handleOk}\r\n                    >\r\n                        <label htmlFor='code'>次品项编号 </label>\r\n                        <Input \r\n                          placeholder=\"请输入\"\r\n                          value={editInfo.code}\r\n                          onChange={this.codeInput.bind(this)}/>\r\n                        <label htmlFor='name'>次品项名称 </label>     \r\n                        <Input \r\n                          placeholder=\"请输入\"\r\n                          value={editInfo.name}\r\n                          onChange={this.nameInput.bind(this)}/>\r\n                               \r\n                    </Modal>\r\n                </div>\r\n                <div className='cipintable'>\r\n                    <Table \r\n                      columns={columns} \r\n                      dataSource={data} \r\n                      pagination={_pagination}\r\n                      onChange={this.onTableChange}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default cipin;","E:\\react\\demo-project\\src\\views\\admin\\yonghu.js",["100","101","102","103","104","105","106","107","108"],"E:\\react\\demo-project\\src\\views\\admin\\wuliaocreate.js",["109","110","111","112"],"E:\\react\\demo-project\\src\\views\\admin\\gongxucreate.js",["113","114","115","116"],"E:\\react\\demo-project\\src\\api\\index.js",[],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":233,"column":29,"nodeType":"123","endLine":235,"endColumn":81},{"ruleId":"121","severity":1,"message":"122","line":237,"column":29,"nodeType":"123","endLine":239,"endColumn":81},{"ruleId":"124","severity":1,"message":"125","line":1,"column":17,"nodeType":"126","messageId":"127","endLine":1,"endColumn":26},{"ruleId":"124","severity":1,"message":"128","line":7,"column":5,"nodeType":"126","messageId":"127","endLine":7,"endColumn":21},{"ruleId":"124","severity":1,"message":"129","line":9,"column":26,"nodeType":"126","messageId":"127","endLine":9,"endColumn":40},{"ruleId":"124","severity":1,"message":"130","line":9,"column":42,"nodeType":"126","messageId":"127","endLine":9,"endColumn":56},{"ruleId":"121","severity":1,"message":"122","line":55,"column":21,"nodeType":"123","endLine":59,"endColumn":22},{"ruleId":"121","severity":1,"message":"122","line":60,"column":21,"nodeType":"123","endLine":63,"endColumn":22},{"ruleId":"131","severity":1,"message":"132","line":104,"column":9,"nodeType":"133","messageId":"134","endLine":104,"endColumn":37,"fix":"135"},{"ruleId":"124","severity":1,"message":"136","line":173,"column":32,"nodeType":"126","messageId":"127","endLine":173,"endColumn":36},{"ruleId":"124","severity":1,"message":"137","line":173,"column":38,"nodeType":"126","messageId":"127","endLine":173,"endColumn":46},{"ruleId":"124","severity":1,"message":"138","line":11,"column":5,"nodeType":"126","messageId":"127","endLine":11,"endColumn":15},{"ruleId":"124","severity":1,"message":"139","line":12,"column":5,"nodeType":"126","messageId":"127","endLine":12,"endColumn":18},{"ruleId":"124","severity":1,"message":"140","line":14,"column":5,"nodeType":"126","messageId":"127","endLine":14,"endColumn":21},{"ruleId":"121","severity":1,"message":"122","line":72,"column":21,"nodeType":"123","endLine":75,"endColumn":22},{"ruleId":"121","severity":1,"message":"122","line":76,"column":21,"nodeType":"123","endLine":79,"endColumn":22},{"ruleId":"131","severity":1,"message":"132","line":111,"column":9,"nodeType":"133","messageId":"134","endLine":111,"endColumn":36,"fix":"141"},{"ruleId":"124","severity":1,"message":"136","line":171,"column":32,"nodeType":"126","messageId":"127","endLine":171,"endColumn":36},{"ruleId":"124","severity":1,"message":"137","line":171,"column":38,"nodeType":"126","messageId":"127","endLine":171,"endColumn":46},{"ruleId":"124","severity":1,"message":"142","line":171,"column":60,"nodeType":"126","messageId":"127","endLine":171,"endColumn":79},{"ruleId":"121","severity":1,"message":"122","line":96,"column":21,"nodeType":"123","endLine":96,"endColumn":43},{"ruleId":"121","severity":1,"message":"122","line":97,"column":21,"nodeType":"123","endLine":97,"endColumn":43},{"ruleId":"121","severity":1,"message":"122","line":98,"column":21,"nodeType":"123","endLine":98,"endColumn":43},{"ruleId":"121","severity":1,"message":"122","line":99,"column":21,"nodeType":"123","endLine":99,"endColumn":43},{"ruleId":"121","severity":1,"message":"122","line":100,"column":21,"nodeType":"123","endLine":100,"endColumn":43},{"ruleId":"131","severity":1,"message":"132","line":131,"column":9,"nodeType":"133","messageId":"134","endLine":131,"endColumn":38,"fix":"143"},{"ruleId":"124","severity":1,"message":"136","line":145,"column":32,"nodeType":"126","messageId":"127","endLine":145,"endColumn":36},{"ruleId":"121","severity":1,"message":"122","line":36,"column":21,"nodeType":"123","endLine":39,"endColumn":24},{"ruleId":"121","severity":1,"message":"122","line":41,"column":21,"nodeType":"123","endLine":43,"endColumn":22},{"ruleId":"131","severity":1,"message":"132","line":88,"column":9,"nodeType":"133","messageId":"134","endLine":88,"endColumn":33,"fix":"144"},{"ruleId":"121","severity":1,"message":"122","line":35,"column":21,"nodeType":"123","endLine":38,"endColumn":22},{"ruleId":"121","severity":1,"message":"122","line":39,"column":21,"nodeType":"123","endLine":42,"endColumn":22},{"ruleId":"124","severity":1,"message":"145","line":2,"column":47,"nodeType":"126","messageId":"127","endLine":2,"endColumn":51},{"ruleId":"124","severity":1,"message":"146","line":10,"column":3,"nodeType":"126","messageId":"127","endLine":10,"endColumn":14},{"ruleId":"124","severity":1,"message":"147","line":14,"column":3,"nodeType":"126","messageId":"127","endLine":14,"endColumn":13},{"ruleId":"124","severity":1,"message":"148","line":15,"column":3,"nodeType":"126","messageId":"127","endLine":15,"endColumn":17},{"ruleId":"124","severity":1,"message":"149","line":18,"column":8,"nodeType":"126","messageId":"127","endLine":18,"endColumn":12},{"ruleId":"121","severity":1,"message":"122","line":87,"column":21,"nodeType":"123","endLine":94,"endColumn":22},{"ruleId":"121","severity":1,"message":"122","line":95,"column":21,"nodeType":"123","endLine":98,"endColumn":22},{"ruleId":"121","severity":1,"message":"122","line":99,"column":21,"nodeType":"123","endLine":101,"endColumn":22},{"ruleId":"131","severity":1,"message":"132","line":160,"column":7,"nodeType":"133","messageId":"134","endLine":160,"endColumn":31,"fix":"150"},{"ruleId":"124","severity":1,"message":"145","line":2,"column":33,"nodeType":"126","messageId":"127","endLine":2,"endColumn":37},{"ruleId":"124","severity":1,"message":"151","line":3,"column":8,"nodeType":"126","messageId":"127","endLine":3,"endColumn":16},{"ruleId":"124","severity":1,"message":"152","line":7,"column":5,"nodeType":"126","messageId":"127","endLine":7,"endColumn":20},{"ruleId":"124","severity":1,"message":"153","line":10,"column":5,"nodeType":"126","messageId":"127","endLine":10,"endColumn":19},{"ruleId":"124","severity":1,"message":"145","line":2,"column":33,"nodeType":"126","messageId":"127","endLine":2,"endColumn":37},{"ruleId":"124","severity":1,"message":"151","line":3,"column":8,"nodeType":"126","messageId":"127","endLine":3,"endColumn":16},{"ruleId":"124","severity":1,"message":"154","line":7,"column":3,"nodeType":"126","messageId":"127","endLine":7,"endColumn":17},{"ruleId":"124","severity":1,"message":"155","line":10,"column":3,"nodeType":"126","messageId":"127","endLine":10,"endColumn":16},"no-native-reassign",["156"],"no-negated-in-lhs",["157"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'SolutionOutlined' is defined but never used.","'insertMateriel' is defined but never used.","'updateMateriel' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property then.","MemberExpression","unexpectedWhitespace",{"range":"158","text":"159"},"'info' is assigned a value but never used.","'editInfo' is assigned a value but never used.","'addProcess' is defined but never used.","'updateProcess' is defined but never used.","'getProcessDetail' is defined but never used.",{"range":"160","text":"159"},"'modalAddInfoVisible' is assigned a value but never used.",{"range":"161","text":"159"},{"range":"162","text":"159"},"'Form' is defined but never used.","'getUserInfo' is defined but never used.","'enableUser' is defined but never used.","'changePassword' is defined but never used.","'Item' is defined but never used.",{"range":"163","text":"159"},"'FormItem' is defined but never used.","'getMaterialList' is defined but never used.","'deleteMateriel' is defined but never used.","'getProcessList' is defined but never used.","'deleteProcess' is defined but never used.","no-global-assign","no-unsafe-negation",[3153,3155],".",[3368,3370],[3929,3931],[2432,2434],[4499,4501]]